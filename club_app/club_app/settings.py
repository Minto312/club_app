"""
Django settings for club_app project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gk#@7d=dg$ajjbc(v3+i4xj^ofj%#-5mazr#e^64lg&9mdh2o!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('IS_PRODUCT') != 'True'

ALLOWED_HOSTS = [os.environ.get('HOST','*')]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'home',
    'club_app',
    'account',
    'attendance',
    'information',
    'score',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
   
    # app_name.python_file_name.class_name
    'club_app.middleware.AuthMiddleware',
]

ROOT_URLCONF = 'club_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'club_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

if os.environ.get('IS_DOCKER') == 'True':    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'club_app',
            'USER': 'root',
            'PASSWORD': 'password',
            'HOST': '/var/run/mysqld/mysqld.sock',
            # 'HOST': 'db',
            # 'PORT': '3306',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'account.CustomUser'

LOGIN_URL = '/account/sign_in/'
LOGIN_REDIRECT_URL = ''
LOGOUT_REDIRECT_URL = ''

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

if os.environ.get('IS_DOCKER') == 'True':    
    STATIC_ROOT = '/var/www/static/'
    MEDIA_ROOT = '/var/www/media/'
else:
    STATIC_ROOT = 'static/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#ログ出力先のディレクトリを設定する
# LOG_BASE_DIR = '/var/log/'
# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "formatters": {"simple": {"format": "%(asctime)s [%(levelname)s] %(message)s"}},
#     "handlers": {
#         "debug": {
#             "level": "DEBUG",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(LOG_BASE_DIR, "debug.log"),
#             "formatter": "simple",
#         },
#         "info": {
#             "level": "INFO",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(LOG_BASE_DIR, "info.log"),
#             "formatter": "simple",
#         },
#         "warning": {
#             "level": "WARNING",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(LOG_BASE_DIR, "warning.log"),
#             "formatter": "simple",
#         },
#         "error": {
#             "level": "ERROR",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(LOG_BASE_DIR, "error.log"),
#             "formatter": "simple",
#         },
#     },
#     "root": {
#         "handlers": ["debug","info", "warning", "error"],
#         "level": "DEBUG",
#     },
# }